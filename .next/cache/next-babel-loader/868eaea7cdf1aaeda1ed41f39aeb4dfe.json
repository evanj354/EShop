{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport itemReducer from '../reducers/cart';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: hardSet\n};\nconst persistedReducer = persistReducer(persistConfig, itemReducer);\nconst store = createStore(itemReducer);\nlet persistor = persistStore(store); //Subscribe a method to the store so each time an action is dispatched against the store the function is called\n\nstore.subscribe(() => {\n  console.log('Cart Items: ', store.getState());\n}); // export {store, persistor};\n\nexport { store };","map":{"version":3,"sources":["/Users/evan/Desktop/Desktop/Coding/EShop/pages/store/store.js"],"names":["createStore","applyMiddleware","storage","itemReducer","thunkMiddleware","composeWithDevTools","persistStore","persistReducer","hardSet","persistConfig","key","stateReconciler","persistedReducer","store","persistor","subscribe","console","log","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2CAApB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBR,EAAAA,OAAO,EAAEA,OAFS;AAGlBS,EAAAA,eAAe,EAAEH;AAHC,CAAtB;AAOA,MAAMI,gBAAgB,GAAGL,cAAc,CAACE,aAAD,EAAgBN,WAAhB,CAAvC;AAEA,MAAMU,KAAK,GAAGb,WAAW,CACrBG,WADqB,CAAzB;AAGA,IAAIW,SAAS,GAAGR,YAAY,CAACO,KAAD,CAA5B,C,CAEA;;AACAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,KAAK,CAACK,QAAN,EAA5B;AACH,CAFD,E,CAIA;;AAEA,SAASL,KAAT","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport itemReducer from '../reducers/cart';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet'\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    stateReconciler: hardSet\n}\n\n\nconst persistedReducer = persistReducer(persistConfig, itemReducer);\n\nconst store = createStore(\n    itemReducer);\n\nlet persistor = persistStore(store);\n\n//Subscribe a method to the store so each time an action is dispatched against the store the function is called\nstore.subscribe(() => {\n    console.log('Cart Items: ', store.getState());\n})\n\n// export {store, persistor};\n\nexport { store };"]},"metadata":{},"sourceType":"module"}