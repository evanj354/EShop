{"ast":null,"code":"import { useReducer } from \"react\";\nimport { REHYDRATE, PERSIST } from 'redux-persist';\nconst initialState = {\n  cart: []\n};\n\nconst itemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        return {\n          cart: [...state.cart, action.item]\n        };\n      }\n\n    case 'CLEAR_ITEM':\n      {\n        console.log('ACTION INDEX ', action.index);\n        return {\n          cart: state.cart.filter((item, index) => {\n            index != action.index;\n          })\n        };\n      }\n\n    case 'CLEAR_ITEMS':\n      {\n        console.log(\"CLEARING ITEMS\");\n        return {\n          cart: []\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default itemReducer;","map":{"version":3,"sources":["/Users/evan/Desktop/Desktop/Coding/EShop/pages/reducers/cart.js"],"names":["useReducer","REHYDRATE","PERSIST","initialState","cart","itemReducer","state","action","type","item","console","log","index","filter"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,eAAjC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAAgC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AAAiB;AACb,eAAO;AAAEJ,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACE,IAAvB;AAAR,SAAP;AACH;;AACD,SAAK,YAAL;AAAoB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BJ,MAAM,CAACK,KAAnC;AACA,eAAO;AAAER,UAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAmB,CAACJ,IAAD,EAAOG,KAAP,KAAiB;AAAEA,YAAAA,KAAK,IAAIL,MAAM,CAACK,KAAhB;AAAuB,WAA7D;AAAR,SAAP;AACH;;AACD,SAAK,aAAL;AAAoB;AAChBF,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,eAAO;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAP;AACH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AAdL;AAgBH,CAjBD;;AAmBA,eAAeD,WAAf","sourcesContent":["import { useReducer } from \"react\";\nimport {REHYDRATE, PERSIST} from 'redux-persist'\n\nconst initialState = {\n    cart: []\n};\n\nconst itemReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case 'ADD_ITEM': {\n            return { cart: [...state.cart, action.item]} ;\n        }\n        case 'CLEAR_ITEM':  {\n            console.log('ACTION INDEX ',action.index);\n            return { cart: state.cart.filter( (item, index) => { index != action.index } ) }\n        }\n        case 'CLEAR_ITEMS': {\n            console.log(\"CLEARING ITEMS\");\n            return { cart: [] };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default itemReducer;"]},"metadata":{},"sourceType":"module"}