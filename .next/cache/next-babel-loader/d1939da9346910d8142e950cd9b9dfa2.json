{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport rootReducer from '../reducers/index';\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['authReducer', 'cartReducer'],\n  stateReconciler: hardSet\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nvar store = createStore(persistedReducer);\nvar persistor = persistStore(store); //Subscribe a method to the store so each time an action is dispatched against the store the function is called\n\nstore.subscribe(function () {\n  console.log('Cart Items: ', store.getState());\n});\nexport { store, persistor }; // export { store };","map":{"version":3,"sources":["/Users/evan/Desktop/Desktop/Coding/EShop/pages/store/store.js"],"names":["createStore","applyMiddleware","storage","thunkMiddleware","composeWithDevTools","persistStore","persistReducer","hardSet","autoMergeLevel1","rootReducer","persistConfig","key","whitelist","stateReconciler","persistedReducer","store","persistor","subscribe","console","log","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBT,EAAAA,OAAO,EAAEA,OAFS;AAGlBU,EAAAA,SAAS,EAAE,CACP,aADO,EAEP,aAFO,CAHO;AAOlBC,EAAAA,eAAe,EAAEN;AAPC,CAAtB;AAWA,IAAMO,gBAAgB,GAAGR,cAAc,CAACI,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,IAAMM,KAAK,GAAGf,WAAW,CACrBc,gBADqB,CAAzB;AAGA,IAAIE,SAAS,GAAGX,YAAY,CAACU,KAAD,CAA5B,C,CAEA;;AACAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,KAAK,CAACK,QAAN,EAA5B;AACH,CAFD;AAIA,SAAQL,KAAR,EAAeC,SAAf,G,CAEA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet'\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport rootReducer from '../reducers/index'\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: [\n        'authReducer',\n        'cartReducer',\n    ],\n    stateReconciler: hardSet\n}\n\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n    persistedReducer);\n\nlet persistor = persistStore(store);\n\n//Subscribe a method to the store so each time an action is dispatched against the store the function is called\nstore.subscribe(() => {\n    console.log('Cart Items: ', store.getState());\n})\n\nexport {store, persistor};\n\n// export { store };"]},"metadata":{},"sourceType":"module"}